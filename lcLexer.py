# Generated from lc.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,121,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,
        4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,
        9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,
        1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
        1,19,1,20,4,20,114,8,20,11,20,12,20,115,1,21,1,21,1,21,1,21,0,0,
        22,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,1,0,2,5,
        0,46,46,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,121,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,1,45,1,0,0,0,3,47,1,0,0,0,5,49,1,0,0,0,7,51,1,0,0,
        0,9,54,1,0,0,0,11,58,1,0,0,0,13,63,1,0,0,0,15,67,1,0,0,0,17,69,1,
        0,0,0,19,71,1,0,0,0,21,73,1,0,0,0,23,75,1,0,0,0,25,77,1,0,0,0,27,
        79,1,0,0,0,29,81,1,0,0,0,31,88,1,0,0,0,33,93,1,0,0,0,35,99,1,0,0,
        0,37,102,1,0,0,0,39,108,1,0,0,0,41,113,1,0,0,0,43,117,1,0,0,0,45,
        46,5,59,0,0,46,2,1,0,0,0,47,48,5,42,0,0,48,4,1,0,0,0,49,50,5,44,
        0,0,50,6,1,0,0,0,51,52,5,97,0,0,52,53,5,115,0,0,53,8,1,0,0,0,54,
        55,5,97,0,0,55,56,5,115,0,0,56,57,5,99,0,0,57,10,1,0,0,0,58,59,5,
        100,0,0,59,60,5,101,0,0,60,61,5,115,0,0,61,62,5,99,0,0,62,12,1,0,
        0,0,63,64,5,97,0,0,64,65,5,110,0,0,65,66,5,100,0,0,66,14,1,0,0,0,
        67,68,5,61,0,0,68,16,1,0,0,0,69,70,5,60,0,0,70,18,1,0,0,0,71,72,
        5,43,0,0,72,20,1,0,0,0,73,74,5,45,0,0,74,22,1,0,0,0,75,76,5,47,0,
        0,76,24,1,0,0,0,77,78,5,40,0,0,78,26,1,0,0,0,79,80,5,41,0,0,80,28,
        1,0,0,0,81,82,5,115,0,0,82,83,5,101,0,0,83,84,5,108,0,0,84,85,5,
        101,0,0,85,86,5,99,0,0,86,87,5,116,0,0,87,30,1,0,0,0,88,89,5,102,
        0,0,89,90,5,114,0,0,90,91,5,111,0,0,91,92,5,109,0,0,92,32,1,0,0,
        0,93,94,5,111,0,0,94,95,5,114,0,0,95,96,5,100,0,0,96,97,5,101,0,
        0,97,98,5,114,0,0,98,34,1,0,0,0,99,100,5,98,0,0,100,101,5,121,0,
        0,101,36,1,0,0,0,102,103,5,119,0,0,103,104,5,104,0,0,104,105,5,101,
        0,0,105,106,5,114,0,0,106,107,5,101,0,0,107,38,1,0,0,0,108,109,5,
        110,0,0,109,110,5,111,0,0,110,111,5,116,0,0,111,40,1,0,0,0,112,114,
        7,0,0,0,113,112,1,0,0,0,114,115,1,0,0,0,115,113,1,0,0,0,115,116,
        1,0,0,0,116,42,1,0,0,0,117,118,7,1,0,0,118,119,1,0,0,0,119,120,6,
        21,0,0,120,44,1,0,0,0,2,0,115,1,6,0,0
    ]

class lcLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    SELECT = 15
    FROM = 16
    ORDER = 17
    BY = 18
    WHERE = 19
    NOT = 20
    ID = 21
    Spaces = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'*'", "','", "'as'", "'asc'", "'desc'", "'and'", "'='", 
            "'<'", "'+'", "'-'", "'/'", "'('", "')'", "'select'", "'from'", 
            "'order'", "'by'", "'where'", "'not'" ]

    symbolicNames = [ "<INVALID>",
            "SELECT", "FROM", "ORDER", "BY", "WHERE", "NOT", "ID", "Spaces" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "SELECT", "FROM", "ORDER", "BY", "WHERE", "NOT", "ID", 
                  "Spaces" ]

    grammarFileName = "lc.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


